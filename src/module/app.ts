/*  
  Поведенческие паттерны - решают задачу эффективного взаимодействия между компонентами.

  1. Chain of Command / Цепочка вызово - практически в любой API, где есть обработчики. Задача Chain of Command построить такую цепоку, 
    которая бы отрабатывала входящий запрос-например, и передавала бы это друг за другом 

  2. Mediator / Посредник - позволяет реализовать эффективное взаимодействие, между несколькими компонентами, которые должны быть сильно связаны 
    друг с другом (причем в рандомном порядке) и позволяет модерировать фактическое взаимодействие

  3. Command / Команда - дает возможность вынести часть логики передачи в команды и ненапрямую взаимодействовать объектам друг с другом, а в команды

  4. State / Состояние - позволяет эффективно работать с состоянием объекта

  5. Strategy / Стратегия - позволяет реализовывать наборы стратегий, которые можно взаимо заменять 

  6. Iterator / Итератор - позволяет сделать возможность итерировать любой сложности коллекции в различном порядке

  7. Template method / Шаблонный метод - позволяет задать шаблонный метод с набором последовательных шагов, которые могут пременяться к различным схожим системам

  8. Observer / Наблюдатель - позволяет подписаться на определенный Subject, и получать уведомления об изменении 
*/

